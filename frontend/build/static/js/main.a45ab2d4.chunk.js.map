{"version":3,"sources":["components/HomePage.js","App.js","index.js"],"names":["HomePage","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","info","setInfo","_useState5","_useState6","infoMessage","setInfoMessage","alertRef","useRef","_useState7","_useState8","columnsdata","setUserColumns","_useState9","_useState10","rowdata","setUsersRow","_useState11","_useState12","pageid","setId","_useState13","_useState14","useremail","setEmail","_useState15","_useState16","password","setPassword","_useState17","_useState18","cc","setCc","_useState19","_useState20","subject","setSubject","_useState21","_useState22","body","setBody","_useState23","_useState24","selectedFile","setSelectedFile","_useState25","_useState26","showModal","sertShowModal","_useState27","_useState28","logarray","setLogArray","useEffect","console","log","config","axios","get","REACT_APP_BACKEND_URL","then","response","data","val","catch","error","_jsxs","_Fragment","children","Modal","show","cancel","size","centered","_jsx","Header","closeButton","Title","id","Body","style","display","justifyContent","alignItems","height","marginBottom","marginRight","Button","backgroundColor","color","padding","border","borderRadius","fontSize","cursor","boxShadow","transition","onClick","file","formData","FormData","dataarr","append","JSON","stringify","post","handleFileSelect","interval","setInterval","length","clearInterval","getLogs","Card","width","background","map","Footer","Alert","ref","variant","className","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","as","rows","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","cells","Object","keys","ws","Sheets","sheet_to_json","skipHeader","header","worksheettemp","json_to_sheet","column","forEach","key","formattedValue","concat","String","push","onerror","d","readExcel","files","accept","minHeight","BsFillInfoCircleFill","variable1","variable2","Table","index","toLowerCase","replace","App","dotenv","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a45ab2d4.chunk.js","sourcesContent":["import React, { useState, useEffect,useRef } from \"react\";\r\nimport { Modal,Card,Form,Alert,Table } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { setLoginModalShow } from \"./commonLogin\";\r\nimport LoginModal from \"./LoginModal\";\r\nimport { BsFillInfoCircleFill } from 'react-icons/bs';\r\nimport axios from 'axios'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport config from \"../clientconfig.json\"\r\n// import dotenv from 'dotenv';\r\n\r\n\r\n\r\n\r\n// import readXlsxFile from 'read-excel-file'\r\nimport * as XLSX from 'xlsx'\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [info,setInfo]=useState(false)\r\n  const[infoMessage,setInfoMessage]=useState(\"ggg\")\r\n  const alertRef = useRef(null);\r\n  const [columnsdata, setUserColumns] = useState([]);\r\n  const [rowdata, setUsersRow] = useState([]);\r\n  const[pageid,setId]=useState(\"\")\r\n  const [useremail, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [cc, setCc] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [showModal,sertShowModal]=useState(false)\r\n  const [logarray,setLogArray]=useState([])\r\n\r\n  useEffect(() => {\r\n    console.log(config);\r\n    axios.get(config.REACT_APP_BACKEND_URL)\r\n      .then(response => {\r\n        // Handle the response data\r\n        console.log(response.data);\r\n        const val=response.data\r\n\r\n        setId(val);\r\n        console.log(val)\r\n        console.log(\"page\",pageid)\r\n      })\r\n      .catch(error => {\r\n        // Handle any errors\r\n        console.error(error);\r\n      });\r\n  \r\n    \r\n  \r\n    return () => {\r\n     \r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('pageid', pageid);\r\n  }, [pageid]);\r\n  \r\n  \r\n  \r\n  function handleFileSelect() {\r\n    const file = selectedFile\r\n    \r\n  const formData = new FormData();\r\n  const dataarr=[pageid,useremail,password,cc,subject,body,columnsdata,rowdata]\r\n  console.log(dataarr)\r\n\r\n  formData.append('uploadLocation',JSON.stringify(dataarr));\r\n  formData.append('file', file);\r\n \r\n\r\n  \r\n  \r\n  \r\n  axios.post(config.REACT_APP_BACKEND_URL+'/oop', formData)\r\n  .then(response => {\r\n    // Handle the response data\r\n    console.log(response.data);\r\n  })\r\n  .catch(error => {\r\n    // Handle any errors\r\n    console.error(error);\r\n  });\r\n\r\n\r\n  }\r\n  function callEndpoint() {\r\n    const data = {\r\n      variable1: 'value1',\r\n      variable2: 'value2'\r\n    };\r\n  \r\n    axios.post(config.REACT_APP_BACKEND_URL+'/oop', data)\r\n      .then(response => {\r\n        // Handle the response data\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        // Handle any errors\r\n        console.error(error);\r\n      });\r\n  }\r\n  const getLogs = () => {\r\n    const data = {\r\n      pageid: pageid,\r\n      \r\n    };\r\n  \r\n    axios.post(config.REACT_APP_BACKEND_URL + '/getLogs', data)\r\n      .then(response => {\r\n        // Handle the response data\r\n        console.log(response.data);\r\n        setLogArray(response.data)\r\n      })\r\n      .catch(error => {\r\n        // Handle any errors\r\n        console.error(error);\r\n      });\r\n  };\r\n \r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: \"array\" });\r\n        // console.log(wb)\r\n\r\n        const wsname = wb.SheetNames[0];\r\n        var cells = Object.keys(wb);\r\n        console.log(\"cells\",cells)\r\n        // console.log(wsname)\r\n\r\n        const ws = wb.Sheets[wsname];\r\n        // console.log(ws)\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws, {\r\n          skipHeader:false,\r\n         \r\n          header: 'A',\r\n          \r\n        });\r\n        setUsersRow(data)\r\n        const worksheettemp = XLSX.utils.json_to_sheet(data);\r\n  console.log(\"x\",worksheettemp)\r\n        const data2=XLSX.utils.sheet_to_json(ws);\r\n        console.log(data)\r\n         let column=[]\r\n         Object.keys(data[0]).forEach(key => {\r\n          const value = data[0][key];\r\n          const formattedValue = `{${String(value)}}`;\r\n          column.push(formattedValue);\r\n        });\r\n        setUserColumns([...column])\r\n      \r\n\r\n        resolve(data);\r\n        // console.log(data)\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then((d) => {\r\n      // setItems(d);\r\n    });\r\n  };\r\n  const handleClose = () => {\r\n    setInfo(false);\r\n  };\r\n \r\n  return (\r\n    <>\r\n    <Modal\r\n        show={showModal}\r\n        cancel={()=>{sertShowModal(false)\r\n\r\n        }}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Logout</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50px', marginBottom: '20px' }}>\r\n      <h5 style={{ marginRight: '10px' }}>Click this button to submit your request</h5>\r\n      <Button style={{ backgroundColor: '#e6f2ff', color: '#000000', padding: '10px 20px', border: 'none', borderRadius: '4px', fontSize: '16px', cursor: 'pointer', boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)', transition: 'background-color 0.3s ease' }} onClick={()=>{handleFileSelect()\r\n      const interval = setInterval(() => {\r\n        if (rowdata.length === logarray.length +1) {\r\n          clearInterval(interval);\r\n        } else {\r\n          getLogs();\r\n        }\r\n      }, 2000);\r\n      }}\r\n      >\r\n        Send Email\r\n      </Button>\r\n    </div>\r\n          <Card style={{ width: '100%',background:\"#EAF2F8\"}}>\r\n            <Card.Title>\r\n              Your Logs will appear as soon as you submit your request<br></br>\r\n            </Card.Title>\r\n          <Card.Body>\r\n            {logarray.map(log=>(\r\n              <>{log}\r\n              <br></br>\r\n              </>\r\n            ))}\r\n\r\n          </Card.Body>\r\n\r\n\r\n          </Card>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={()=>{\r\n            sertShowModal(false)\r\n          }}>Cancel</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    {info&&(<Alert ref={alertRef} variant={\"Primary\"}>\r\n    <Button\r\n            onClick={handleClose}\r\n            variant=\"link\"\r\n            className=\"close\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </Button>\r\n          {infoMessage}\r\n        </Alert>)}\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n    <Card style={{ width: '28rem',background:\"#EAF2F8\"}}>\r\n      {/* <Card.Img variant=\"top\" src={myImage} alt=\"My Image\" style={{ display: 'block', margin: 'auto' }} /> */}\r\n      <Card.Body>\r\n        {/* <Card.Title>Email Automation</Card.Title> */}\r\n        <Form>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" value={useremail}\r\n        \r\n        onChange={(e)=>{\r\n          setEmail(e.target.value)\r\n          console.log(useremail)\r\n        }} \r\n        \r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll never share your email with anyone else.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" value={password}>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formCc\">\r\n        <Form.Label>CC</Form.Label>\r\n        <Form.Control type=\"text\" value={cc}  onChange={(e) => setCc(e.target.value)} />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formSubject\">\r\n        <Form.Label>Subject</Form.Label>\r\n        <Form.Control type=\"text\" value={subject} onChange={(e) => setSubject(e.target.value)}  />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBody\">\r\n        <Form.Label>Body</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={5}\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n         \r\n        />\r\n      </Form.Group>\r\n     \r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Upload you excell with recepietient emails in column1</Form.Label>\r\n        <Form.Control type=\"file\" placeholder=\"Upload your file\"  onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            readExcel(file);\r\n          }}\r\n          accept=\".xlsx, .xls\" />\r\n       \r\n      </Form.Group>\r\n      <Card style={{ width: '25rem',background:\"white\",minHeight:\"10rem\"}} >\r\n        <Card.Title style={{fontSize:'12px'}}>\r\n          Your Keys will display here once u upload excel<BsFillInfoCircleFill\r\n        onClick={()=>{\r\n          console.log(\"heh\")\r\n          \r\n          callEndpoint()\r\n          setInfoMessage(\"The Keys are basically variables that you should replace in your email body and attachment file in order for us to use them and fetch information from the excel you uploaded , you can change your columnnames , if u wish to have different names\")\r\n        console.log(\"gdgdggd\")\r\n        setInfo(true)\r\n      \r\n      }\r\n      \r\n      }  \r\n          \r\n          \r\n          />\r\n        </Card.Title>\r\n        <Card.Body>\r\n        <Table>\r\n          Replace Values in your email with these variables\r\n      <tbody>\r\n        {columnsdata.map((data, index) => (\r\n          <tr >\r\n           <td>{`{${data.toLowerCase().replace(/\\s/g, '')}}`}</td>\r\n            <br></br>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n          \r\n          </Card.Body>\r\n\r\n      </Card>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Upload you sample doc file replacing the variables</Form.Label>\r\n        <Form.Control type=\"file\" placeholder=\"Upload your file\" accept=\".docx,.doc\" onChange={(e)=>{\r\n          console.log(\"some changed\")\r\n          setSelectedFile(e.target.files[0])\r\n          // handleFileSelect(e)\r\n\r\n        }} />\r\n       \r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n         \r\n         <button onClick={() => \r\n         {\r\n          console.log(cc)\r\n          console.log(subject)\r\n          console.log(password)\r\n          // handleFileSelect()\r\n          sertShowModal(true)\r\n          \r\n        }\r\n      }\r\n        >Open Modal</button>\r\n      {/* <LoginModal show={showLogin}\r\n      \r\n      close={() => setShowLogin(false)} \r\n      /> */}\r\n        \r\n        {/* <Button variant=\"primary\">Go somewhere</Button> */}\r\n      </Card.Body>\r\n    </Card>\r\n      {/* <button onClick={() => setShowLogin(true)}>Open Modal</button>\r\n      <LoginModal show={showLogin} close={() => setShowLogin(false)} /> */}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import HomePage from \"./components/HomePage\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport dotenv from 'dotenv';\n\n\ndotenv.config();\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}